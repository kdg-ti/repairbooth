buildscript {
    ext {
        springBootVersion = '1.5.6.RELEASE'
    }
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
    }
}

apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'idea'
apply plugin: 'org.springframework.boot'

version = '1.1.0'
sourceCompatibility = 1.8

allprojects {
    apply plugin: 'idea'
    idea {
        module {
            outputDir file('build/classes/main')
            testOutputDir file('build/classes/test')
        }
    }
    if (project.convention.findPlugin(JavaPluginConvention)) {
        // Change the output directory for the main and test source sets back to the old path
        sourceSets.main.output.classesDir = new File(buildDir, "classes/main")
        sourceSets.test.output.classesDir = new File(buildDir, "classes/test")
    }
}

repositories {
    mavenCentral()
}


dependencies {
    compile('org.springframework.boot:spring-boot-starter-data-jpa')
    compile('org.springframework.boot:spring-boot-starter-security')
    compile('com.h2database:h2')
    compile('org.springframework.boot:spring-boot-starter-web')
    compile('org.springframework.boot:spring-boot-devtools')
    compile('org.springframework.boot:spring-boot-starter-thymeleaf')
    compile('org.thymeleaf.extras:thymeleaf-extras-springsecurity4')
    compile('org.webjars:webjars-locator-core:0.32')
    compile('org.webjars:bootstrap:3.3.7')
    compile('org.webjars:jquery:3.2.1')
    compile('net.sourceforge.nekohtml:nekohtml:1.9.22')
    compile('ma.glasnost.orika:orika-core:1.5.1')
    compile('org.thymeleaf.extras:thymeleaf-extras-java8time:2.1.0.RELEASE')

    testCompile('org.springframework.boot:spring-boot-starter-test')
    testCompile('org.springframework.security:spring-security-test')
    testCompile(group: 'org.hamcrest', name: 'hamcrest-library', version: '1.3')
}
